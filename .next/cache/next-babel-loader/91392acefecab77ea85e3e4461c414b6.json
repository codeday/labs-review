{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/x/VCS/github.com/codeday/labs-review/src/pages/link.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Heading } from '@codeday/topo/Atom/Text';\nimport Content from '@codeday/topo/Molecule/Content';\nimport FormControl, { Label } from '@codeday/topo/Molecule/FormControl';\nimport { default as Input } from '@codeday/topo/Atom/Input/Text';\nimport Button from '@codeday/topo/Atom/Button';\nimport Page from '../components/page';\nexport default function Home() {\n  _s();\n\n  var _useState = useState(),\n      link = _useState[0],\n      setLink = _useState[1];\n\n  var _useState2 = useState(),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  var _useState4 = useState(),\n      initialState = _useState4[0],\n      setInitialState = _useState4[1];\n\n  var _useState5 = useState(),\n      resultStates = _useState5[0],\n      setResultStates = _useState5[1];\n\n  return __jsx(Page, {\n    slug: \"/link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, __jsx(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }, __jsx(Heading, {\n    as: \"h2\",\n    fontSize: \"5xl\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"Make Review Link\"), link ? link : __jsx(React.Fragment, null, __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, \"Password\"), __jsx(Input, {\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  })), __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, \"Initial State\"), __jsx(Input, {\n    value: initialState,\n    onChange: function onChange(e) {\n      return setInitialState(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })), __jsx(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"Result States\"), __jsx(Input, {\n    value: resultStates,\n    onChange: function onChange(e) {\n      return setResultStates(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    variantColor: \"green\",\n    disabled: loading || !(password && initialState && resultStates),\n    isLoading: loading,\n    onClick: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var _link;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch('/api/link', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    password: password,\n                    initialState: initialState,\n                    finalStates: finalStates\n                  })\n                });\n\n              case 4:\n                _link = _context.sent;\n                setLink(_link);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n\n              case 11:\n                setLoading(false);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n}\n\n_s(Home, \"WDDR6hHkzFqSjGIbRmXwosiBvb0=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/x/VCS/github.com/codeday/labs-review/src/pages/link.js"],"names":["React","useState","Heading","Content","FormControl","Label","default","Input","Button","Page","Home","link","setLink","loading","setLoading","password","setPassword","initialState","setInitialState","resultStates","setResultStates","e","target","value","fetch","method","headers","body","JSON","stringify","finalStates","console","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Heading } from '@codeday/topo/Atom/Text';\nimport Content from '@codeday/topo/Molecule/Content';\nimport FormControl, { Label } from '@codeday/topo/Molecule/FormControl';\nimport { default as Input } from '@codeday/topo/Atom/Input/Text';\nimport Button from '@codeday/topo/Atom/Button';\nimport Page from '../components/page';\n\nexport default function Home() {\n  const [link, setLink] = useState();\n  const [loading, setLoading] = useState();\n  const [password, setPassword] = useState();\n  const [initialState, setInitialState] = useState();\n  const [resultStates, setResultStates] = useState();\n\treturn (\n\t\t<Page slug=\"/link\">\n\t\t\t<Content>\n\t\t\t\t<Heading as=\"h2\" fontSize=\"5xl\" textAlign=\"center\">Make Review Link</Heading>\n        {link ? link : (\n          <>\n            <FormControl>\n              <Label>Password</Label>\n              <Input value={password} onChange={(e) => setPassword(e.target.value)} />\n            </FormControl>\n            <FormControl>\n              <Label>Initial State</Label>\n              <Input value={initialState} onChange={(e) => setInitialState(e.target.value)} />\n            </FormControl>\n            <FormControl>\n              <Label>Result States</Label>\n              <Input value={resultStates} onChange={(e) => setResultStates(e.target.value)} />\n            </FormControl>\n            <Button\n              variantColor=\"green\"\n              disabled={loading || !(password && initialState && resultStates)}\n              isLoading={loading}\n              onClick={async (e) => {\n                setLoading(true);\n                try {\n                  const link = await fetch('/api/link', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ password, initialState, finalStates }),\n                  });\n                  setLink(link);\n                } catch (err) {\n                  console.error(err);\n                }\n                setLoading(false);\n              }}\n            >Submit</Button>\n          </>\n        )}\n\t\t\t</Content>\n\t\t</Page>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}