{"ast":null,"code":"import getConfig from 'next/config';\nimport Airtable from 'airtable';\nimport { verify } from 'jsonwebtoken';\nconst {\n  serverRuntimeConfig\n} = getConfig();\nexport default (async (req, res) => {\n  console.log(req.body);\n  const {\n    password,\n    base,\n    table,\n    initialState\n  } = verify(req.body.jwt, serverRuntimeConfig.appSecret);\n  const at = new Airtable({\n    apiKey: serverRuntimeConfig.airtableKey\n  }).base(base)(table);\n  const result = await table.select({\n    maxRecords: 1,\n    filterByFormula: `{Status} = '${initialState}'`\n  });\n  return result[0] || {};\n});","map":{"version":3,"sources":["/home/x/VCS/github.com/codeday/labs-review/src/pages/api/get-entry.js"],"names":["getConfig","Airtable","verify","serverRuntimeConfig","req","res","console","log","body","password","base","table","initialState","jwt","appSecret","at","apiKey","airtableKey","result","select","maxRecords","filterByFormula"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA0BH,SAAS,EAAzC;AAEA,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,MAA0CV,MAAM,CAACE,GAAG,CAACI,IAAJ,CAASK,GAAV,EAAeV,mBAAmB,CAACW,SAAnC,CAAtD;AACA,QAAMC,EAAE,GAAG,IAAId,QAAJ,CAAa;AAAEe,IAAAA,MAAM,EAAEb,mBAAmB,CAACc;AAA9B,GAAb,EAA0DP,IAA1D,CAA+DA,IAA/D,EAAqEC,KAArE,CAAX;AACA,QAAMO,MAAM,GAAG,MAAMP,KAAK,CAACQ,MAAN,CAAa;AAAEC,IAAAA,UAAU,EAAE,CAAd;AAAiBC,IAAAA,eAAe,EAAG,eAAcT,YAAa;AAA9D,GAAb,CAArB;AACA,SAAOM,MAAM,CAAC,CAAD,CAAN,IAAa,EAApB;AACD,CAND","sourcesContent":["import getConfig from 'next/config';\nimport Airtable from 'airtable';\nimport { verify } from 'jsonwebtoken';\n\nconst { serverRuntimeConfig } = getConfig();\n\nexport default async (req, res) => {\n  console.log(req.body);\n  const { password, base, table, initialState } = verify(req.body.jwt, serverRuntimeConfig.appSecret);\n  const at = new Airtable({ apiKey: serverRuntimeConfig.airtableKey }).base(base)(table);\n  const result = await table.select({ maxRecords: 1, filterByFormula: `{Status} = '${initialState}'`});\n  return result[0] || {};\n}\n"]},"metadata":{},"sourceType":"module"}