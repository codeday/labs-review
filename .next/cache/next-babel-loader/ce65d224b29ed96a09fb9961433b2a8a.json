{"ast":null,"code":"import getConfig from 'next/config';\nimport Airtable from 'airtable';\nimport { verify } from 'jsonwebtoken';\nconst {\n  serverRuntimeConfig\n} = getConfig();\nexport default (async (req, res) => {\n  const {\n    base,\n    table,\n    initialState\n  } = verify(req.body.jwt, serverRuntimeConfig.appSecret);\n  const at = new Airtable({\n    apiKey: serverRuntimeConfig.airtableKey\n  }).base(base)(table);\n  const result = await (await at.select({\n    maxRecords: 1,\n    filterByFormula: `{Status} = '${initialState}'`,\n    sort: [{\n      field: \"Cognito ID\",\n      direction: \"asc\"\n    }]\n  })).firstPage();\n  res.send((result[0] || {\n    fields: {}\n  }).fields);\n});","map":{"version":3,"sources":["/home/x/VCS/github.com/codeday/labs-review/src/pages/api/get-entry.js"],"names":["getConfig","Airtable","verify","serverRuntimeConfig","req","res","base","table","initialState","body","jwt","appSecret","at","apiKey","airtableKey","result","select","maxRecords","filterByFormula","sort","field","direction","firstPage","send","fields"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA0BH,SAAS,EAAzC;AAEA,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAgCN,MAAM,CAACE,GAAG,CAACK,IAAJ,CAASC,GAAV,EAAeP,mBAAmB,CAACQ,SAAnC,CAA5C;AACA,QAAMC,EAAE,GAAG,IAAIX,QAAJ,CAAa;AAAEY,IAAAA,MAAM,EAAEV,mBAAmB,CAACW;AAA9B,GAAb,EAA0DR,IAA1D,CAA+DA,IAA/D,EAAqEC,KAArE,CAAX;AACA,QAAMQ,MAAM,GAAG,MAAM,CAAC,MAAMH,EAAE,CAACI,MAAH,CAAU;AACpCC,IAAAA,UAAU,EAAE,CADwB;AAEpCC,IAAAA,eAAe,EAAG,eAAcV,YAAa,GAFT;AAGpCW,IAAAA,IAAI,EAAE,CAAC;AAACC,MAAAA,KAAK,EAAE,YAAR;AAAsBC,MAAAA,SAAS,EAAE;AAAjC,KAAD;AAH8B,GAAV,CAAP,EAIjBC,SAJiB,EAArB;AAKAjB,EAAAA,GAAG,CAACkB,IAAJ,CAAS,CAACR,MAAM,CAAC,CAAD,CAAN,IAAa;AAACS,IAAAA,MAAM,EAAC;AAAR,GAAd,EAA2BA,MAApC;AACD,CATD","sourcesContent":["import getConfig from 'next/config';\nimport Airtable from 'airtable';\nimport { verify } from 'jsonwebtoken';\n\nconst { serverRuntimeConfig } = getConfig();\n\nexport default async (req, res) => {\n  const { base, table, initialState } = verify(req.body.jwt, serverRuntimeConfig.appSecret);\n  const at = new Airtable({ apiKey: serverRuntimeConfig.airtableKey }).base(base)(table);\n  const result = await (await at.select({\n    maxRecords: 1,\n    filterByFormula: `{Status} = '${initialState}'`,\n    sort: [{field: \"Cognito ID\", direction: \"asc\"}],\n  })).firstPage();\n  res.send((result[0] || {fields:{}}).fields);\n}\n"]},"metadata":{},"sourceType":"module"}